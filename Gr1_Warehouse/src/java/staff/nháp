// InventoryCheckDAO.java
import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class InventoryCheckDAO {
    private Connection conn;
    
    public InventoryCheckDAO(Connection conn) {
        this.conn = conn;
    }
    
    public List<InventoryCheckDTO> getAllInventoryChecks() {
        List<InventoryCheckDTO> list = new ArrayList<>();
        String sql = "SELECT ic.check_id, w.warehouse_name, ic.status, ic.check_date, " +
                     "SUM(icd.discrepancy) AS total_discrepancy, " +
                     "SUM(icd.discrepancy * ib.unit_price) AS total_discrepancy_value " +
                     "FROM InventoryCheck ic " +
                     "JOIN Warehouses w ON ic.warehouse_id = w.warehouse_id " +
                     "LEFT JOIN InventoryCheckDetails icd ON ic.check_id = icd.check_id " +
                     "LEFT JOIN InventoryBatches ib ON icd.batch_id = ib.batch_id " +
                     "GROUP BY ic.check_id, w.warehouse_name, ic.status, ic.check_date";
        
        try (PreparedStatement ps = conn.prepareStatement(sql); ResultSet rs = ps.executeQuery()) {
            while (rs.next()) {
                InventoryCheckDTO check = new InventoryCheckDTO(
                    rs.getInt("check_id"),
                    rs.getString("warehouse_name"),
                    rs.getString("status"),
                    rs.getTimestamp("check_date"),
                    rs.getInt("total_discrepancy"),
                    rs.getDouble("total_discrepancy_value")
                );
                list.add(check);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return list;
    }
    
    public InventoryCheckDTO getInventoryCheckById(int checkId) {
        String sql = "SELECT ic.check_id, w.warehouse_name, ic.status, ic.check_date, ic.completed_at " +
                     "SUM(icd.discrepancy) AS total_discrepancy, " +
                     "SUM(icd.discrepancy * ib.unit_price) AS total_discrepancy_value " +
                     "FROM InventoryCheck ic " +
                     "JOIN Warehouses w ON ic.warehouse_id = w.warehouse_id " +
                     "LEFT JOIN InventoryCheckDetails icd ON ic.check_id = icd.check_id " +
                     "LEFT JOIN InventoryBatches ib ON icd.batch_id = ib.batch_id " +
                     "WHERE ic.check_id = ? " +
                     "GROUP BY ic.check_id, w.warehouse_name, ic.status, ic.check_date, ic.completed_at";
        
        try (PreparedStatement ps = conn.prepareStatement(sql)) {
            ps.setInt(1, checkId);
            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    return new InventoryCheckDTO(
                        rs.getInt("check_id"),
                        rs.getString("warehouse_name"),
                        rs.getString("status"),
                        rs.getTimestamp("check_date"),
                        rs.getInt("total_discrepancy"),
                        rs.getDouble("total_discrepancy_value")
                    );
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return null;
    }
    
    public List<InventoryCheckDTO> getAllInventoryCheckByStaffId(int staffId) {
        List<InventoryCheckDTO> list = new ArrayList<>();
        String sql = "SELECT ic.check_id, w.warehouse_name, ic.status, ic.check_date, " +
                     "SUM(icd.discrepancy) AS total_discrepancy, " +
                     "SUM(icd.discrepancy * ib.unit_price) AS total_discrepancy_value " +
                     "FROM InventoryCheck ic " +
                     "JOIN Warehouses w ON ic.warehouse_id = w.warehouse_id " +
                     "LEFT JOIN InventoryCheckDetails icd ON ic.check_id = icd.check_id " +
                     "LEFT JOIN InventoryBatches ib ON icd.batch_id = ib.batch_id " +
                     "WHERE ic.created_by = ? " +
                     "GROUP BY ic.check_id, w.warehouse_name, ic.status, ic.check_date";
        
        try (PreparedStatement ps = conn.prepareStatement(sql)) {
            ps.setInt(1, staffId);
            try (ResultSet rs = ps.executeQuery()) {
                while (rs.next()) {
                    InventoryCheckDTO check = new InventoryCheckDTO(
                        rs.getInt("check_id"),
                        rs.getString("warehouse_name"),
                        rs.getString("status"),
                        rs.getTimestamp("check_date"),
                        rs.getInt("total_discrepancy"),
                        rs.getDouble("total_discrepancy_value")
                    );
                    list.add(check);
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return list;
    }
}
